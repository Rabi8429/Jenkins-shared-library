
@Library('jenkins-shared-library') _
pipeline{
    agent any
    tools {
        maven 'maven3.9.2'
    }

    parameters{
        choice(name: 'action', choices: 'create\ndelete', description: 'Choose create/Destroy')
        // Below parameters for docker image build with tag & version
        string(name: 'aws_account_id', description: "AWS Account ID", defaultValue: '927552331003')
        string(name: 'Region', description: "Region of ECR", defaultValue: 'us-east-1')
        string(name: 'ECR_REPO_NAME', description: "Name of the ECR Repo", defaultValue: 'myecr')
    }
     
    stages{ 
        stage('Git Checkout'){
            
            when { expression {  params.action == 'create' } }

            steps{
                gitCheckout(
                    branch: "main",
                    url: "hhttps://github.com/Rabi8429/demo-counter-app.git"
                )
            }
        }
        stage('Unit Test maven'){

            when { expression {  params.action == 'create' } }

            steps{

                mvnTest()
            }
        }
        stage('Integration Test Maven'){

            when { expression {  params.action == 'create' } }

            steps{

                mvnIntegrationTest()
            }
        }
        stage('Static Code Analysis maven'){

            when { expression {  params.action == 'create' } }

            steps{
                
                
                staticCodeAnalysis()
            }
        }
        stage('Quality Gate Status Check'){
            when { expression {  params.action == 'create' } }

            steps{
                
                qualityGateStatus()

            }
        }
        stage('Maven Build'){
            when { expression {  params.action == 'create' } }

            steps{
                
                mvnBuild()

            }
        }
        stage('Docker Image Build: ECR'){
            when { expression {  params.action == 'create' } }

            steps{
                
                dockerBuild("${params.aws_account_id}", "${params.Region}", "${params.ECR_REPO_NAME}")

            }
        }         
        stage('Docker Image Scan: trivy'){
            when { expression {  params.action == 'create' } }

            steps{
                
                dockerImageScan("${params.aws_account_id}", "${params.Region}", "${params.ECR_REPO_NAME}")
            }
        }
        stage('Docker Image Push: ECR'){
            when { expression {  params.action == 'create' } }

            steps{
                
                dockerImagePush("${params.aws_account_id}", "${params.Region}", "${params.ECR_REPO_NAME}")
            }
        }
        stage('Docker Image Cleanup: DockerHub'){
            when { expression {  params.action == 'create' } }

            steps{
                
                dockerImageCleanup("${params.aws_account_id}", "${params.Region}", "${params.ECR_REPO_NAME}")
            }
        }
    

    }
    
}